// Get countdown elements
const daysEl = document.getElementById("days");
const hoursEl = document.getElementById("hours");
const minsEl = document.getElementById("mins");
const secondsEl = document.getElementById("seconds");

// Function to calculate the next birthday dynamically
function getNextBirthday() {
  const currentDate = new Date();
  const currentYear = currentDate.getFullYear();

  // Set the next birthday (change the date as required)
  const nextBirthday = new Date(`28 Sep ${currentYear}`);

  // If today is past the birthday, use the next year
  if (currentDate > nextBirthday) {
    nextBirthday.setFullYear(currentYear + 1);
  }

  return nextBirthday;
}

// Function to update the countdown
function updateCountdown() {
  const birthDate = getNextBirthday();
  const currentDate = new Date();

  const totalSeconds = Math.floor((birthDate - currentDate) / 1000);

  const days = Math.floor(totalSeconds / (3600 * 24));
  const hours = Math.floor((totalSeconds / 3600) % 24);
  const mins = Math.floor((totalSeconds / 60) % 60);
  const seconds = totalSeconds % 60;

  // Update the DOM elements
  daysEl.textContent = days;
  hoursEl.textContent = formatTime(hours);
  minsEl.textContent = formatTime(mins);
  secondsEl.textContent = formatTime(seconds);

  // Add animations for dynamic updates
  addPulseAnimation(daysEl);
  addPulseAnimation(hoursEl);
  addPulseAnimation(minsEl);
  addPulseAnimation(secondsEl);
}

// Helper function to format time (add leading zero)
function formatTime(time) {
  return time.toString().padStart(2, "0");
}

// Helper function to add a pulse animation on value change
function addPulseAnimation(element) {
  element.classList.add("pulse");
  setTimeout(() => {
    element.classList.remove("pulse");
  }, 500); // Match the CSS animation duration
}

// Initial call to update the countdown
updateCountdown();

// Update the countdown every second
setInterval(updateCountdown, 1000);
